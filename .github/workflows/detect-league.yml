name: Detect League and Season

on:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight
  workflow_dispatch:

permissions:
  contents: write

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      league_id: ${{ steps.set-vars.outputs.league_id }}
      season: ${{ steps.set-vars.outputs.season }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Detect Cardiff’s League and Season
        id: set-vars
        run: |
          TEAM_ID=43
          MONTH=$(date +%m)
          YEAR=$(date +%Y)

          if [ "$MONTH" -lt 8 ]; then
            SEASON=$((YEAR - 1))
          else
            SEASON=$YEAR
          fi

          echo "📅 Using season: $SEASON"

          response=$(curl -s --request GET \
            --url "https://api-football-v1.p.rapidapi.com/v3/standings?season=${SEASON}&team=${TEAM_ID}" \
            --header "X-RapidAPI-Key: ${{ secrets.RAPIDAPI_KEY }}" \
            --header "X-RapidAPI-Host: api-football-v1.p.rapidapi.com")

          LEAGUE_ID=$(echo "$response" | jq -r '.response[0].league.id')

          if [ "$LEAGUE_ID" = "null" ] || [ -z "$LEAGUE_ID" ]; then
            echo "❌ Could not determine league ID. Exiting."
            exit 1
          fi

          echo "✅ Detected League ID: $LEAGUE_ID"

          # Save to Git-tracked JSON file (optional, still useful for debugging)
          echo "{\"league_id\": $LEAGUE_ID, \"season\": $SEASON}" > data/league-info.json

          # Set GitHub Actions outputs
          echo "league_id=$LEAGUE_ID" >> $GITHUB_OUTPUT
          echo "season=$SEASON" >> $GITHUB_OUTPUT

      - name: Commit and Push league-info.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add data/league-info.json
          if git diff --cached --quiet; then
            echo "🟢 No changes to commit."
          else
            git commit -m "Update league detection info"
            git push
