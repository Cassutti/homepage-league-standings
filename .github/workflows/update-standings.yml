name: Update Cardiff Standings

on:
  workflow_dispatch:
  schedule:
    # Refresh every 15 minutes from 7:45 PM to 11:59 PM UTC Monday-Friday
    - cron: '45 19 * * 1-5'
    - cron: '*/15 20-23 * * 1-5'
    # Refresh every 15 minutes from 12:00 PM to 11:59 PM UTC Saturday-Sunday
    - cron: '*/15 12-23 * * 6,0'
    # Single refresh at midnight UTC every day (just in case)
    - cron: '0 0 * * *'

permissions:
  contents: write
  
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Cardiff's league for current season
        id: get_league
        run: |
          SEASON=$(date +%Y)
          TEAM_ID=43

          echo "📡 Fetching standings for Cardiff City (team ID $TEAM_ID) in season $SEASON"

          response=$(curl -s --request GET \
            --url "https://api-football-v1.p.rapidapi.com/v3/standings?season=${SEASON}&team=${TEAM_ID}" \
            --header "X-RapidAPI-Key: ${{ secrets.RAPIDAPI_KEY }}" \
            --header "X-RapidAPI-Host: api-football-v1.p.rapidapi.com")

          echo "$response" | jq . > tmp/cardiff-response.json

          LEAGUE_ID=$(echo "$response" | jq -r '.response[0].league.id')
          LEAGUE_NAME=$(echo "$response" | jq -r '.response[0].league.name')

          if [ "$LEAGUE_ID" = "null" ] || [ -z "$LEAGUE_ID" ]; then
            echo "❌ Failed to get league ID from API response."
            echo "$response"
            exit 1
          fi

          echo "✅ Cardiff are in '$LEAGUE_NAME' (League ID: $LEAGUE_ID)"
          echo "LEAGUE_ID=$LEAGUE_ID" >> $GITHUB_ENV
          echo "SEASON=$SEASON" >> $GITHUB_ENV

      - name: Fetch league standings
        run: |
          echo "📊 Fetching full standings for league ID $LEAGUE_ID in $SEASON..."

          curl -s --request GET \
            --url "https://api-football-v1.p.rapidapi.com/v3/standings?season=${SEASON}&league=${LEAGUE_ID}" \
            --header "X-RapidAPI-Key: ${{ secrets.RAPIDAPI_KEY }}" \
            --header "X-RapidAPI-Host: api-football-v1.p.rapidapi.com" \
            | jq . > data/standings.json

      - name: Commit and push if data changed
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add data/standings.json
          if git diff --cached --quiet; then
            echo "🟡 No changes to commit"
          else
            git commit -m "🔁 Update standings (Cardiff league $LEAGUE_ID)"
            git push
