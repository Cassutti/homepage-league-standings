name: Update Cardiff Standings

on:
  workflow_dispatch:
  schedule:
    # Refresh every 15 minutes from 7:45 PM to 11:59 PM UTC Monday-Friday
    - cron: '45 19 * * 1-5'
    - cron: '*/15 20-23 * * 1-5'
    # Refresh every 15 minutes from 12:00 PM to 11:59 PM UTC Saturday-Sunday
    - cron: '*/15 12-23 * * 6,0'
    # Single refresh at midnight UTC every day (just in case)
    - cron: '0 0 * * *'

permissions:
  contents: write
  
jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Detect Cardiff’s Current League and Season
        run: |
          CURRENT_YEAR=$(date +%Y)
          TEAM_ID=43

          try_season() {
            echo "Trying season: $1"
            response=$(curl -s --request GET \
              --url "https://api-football-v1.p.rapidapi.com/v3/standings?season=$1&team=${TEAM_ID}" \
              --header "X-RapidAPI-Key: ${{ secrets.RAPIDAPI_KEY }}" \
              --header "X-RapidAPI-Host: api-football-v1.p.rapidapi.com")

            echo "$response" | jq . > tmp/cardiff-response.json

            LEAGUE_ID=$(echo "$response" | jq -r '.response[0].league.id')
            LEAGUE_NAME=$(echo "$response" | jq -r '.response[0].league.name')

            if [ "$LEAGUE_ID" != "null" ] && [ -n "$LEAGUE_ID" ]; then
              echo "✅ Cardiff are in $LEAGUE_NAME (League ID $LEAGUE_ID) for $1"
              echo "LEAGUE_ID=$LEAGUE_ID" >> $GITHUB_ENV
              echo "SEASON=$1" >> $GITHUB_ENV
              return 0
            fi
            return 1
          }

          mkdir -p tmp

          if ! try_season "$CURRENT_YEAR"; then
            echo "⚠️ No data for $CURRENT_YEAR. Falling back to $((CURRENT_YEAR - 1))..."
            if ! try_season "$((CURRENT_YEAR - 1))"; then
              echo "❌ Could not determine Cardiff's league. Exiting."
              cat tmp/cardiff-response.json
              exit 1
            fi
          fi

      - name: Fetch League Standings
        run: |
          echo "📥 Fetching standings for League ID $LEAGUE_ID, Season $SEASON"
          curl -s --request GET \
            --url "https://api-football-v1.p.rapidapi.com/v3/standings?season=${SEASON}&league=${LEAGUE_ID}" \
            --header "X-RapidAPI-Key: ${{ secrets.RAPIDAPI_KEY }}" \
            --header "X-RapidAPI-Host: api-football-v1.p.rapidapi.com" \
            | jq . > data/standings.json

      - name: Commit and Push if Changed
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add data/standings.json tmp/cardiff-response.json
          if git diff --cached --quiet; then
            echo "🟢 No changes to commit."
          else
            git commit -m "Update standings"
            git push
          fi
